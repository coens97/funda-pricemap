{"ast":null,"code":"function _instanceof(left, right) {\n  return null != right && \"undefined\" != typeof Symbol && right[Symbol.hasInstance] ? right[Symbol.hasInstance](left) : left instanceof right;\n}\n\nfunction _typeof(obj) {\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!_instanceof(instance, Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\nfunction _defineProperties(target, props) {\n  for (var descriptor, i = 0; i < props.length; i++) {\n    descriptor = props[i], descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, \"value\" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  return call && (\"object\" === _typeof(call) || \"function\" == typeof call) ? call : _assertThisInitialized(self);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (\"function\" != typeof superClass && null !== superClass) throw new TypeError(\"Super expression must either be null or a function\");\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: !0,\n      configurable: !0\n    }\n  }), superClass && _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  return _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    return o.__proto__ = p, o;\n  }, _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (void 0 === self) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return self;\n}\n\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport WebMercatorViewport from \"viewport-mercator-project\";\n\nvar propTypes = {\n  captureScroll: PropTypes.bool,\n  captureDrag: PropTypes.bool,\n  captureClick: PropTypes.bool,\n  captureDoubleClick: PropTypes.bool\n},\n    defaultProps = {\n  captureScroll: !1,\n  captureDrag: !0,\n  captureClick: !0,\n  captureDoubleClick: !0\n},\n    contextTypes = {\n  viewport: PropTypes.instanceOf(WebMercatorViewport),\n  isDragging: PropTypes.bool,\n  eventManager: PropTypes.object\n},\n    BaseControl = function (_Component) {\n  function BaseControl(props) {\n    var _this;\n\n    return _classCallCheck(this, BaseControl), _this = _possibleConstructorReturn(this, (BaseControl.__proto__ || Object.getPrototypeOf(BaseControl)).call(this, props)), _this._events = null, _this._onContainerLoad = _this._onContainerLoad.bind(_assertThisInitialized(_this)), _this;\n  }\n\n  return _inherits(BaseControl, _Component), _createClass(BaseControl, [{\n    key: \"_onContainerLoad\",\n    value: function _onContainerLoad(ref) {\n      var eventManager = this.context.eventManager;\n\n      if (eventManager) {\n        var events = this._events;\n        events && (eventManager.off(events), events = null), ref && (events = {\n          wheel: this._onScroll.bind(this),\n          panstart: this._onDrag.bind(this),\n          click: this._onClick.bind(this),\n          dblclick: this._onDoubleClick.bind(this)\n        }, eventManager.on(events, ref)), this._events = events;\n      }\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(evt) {\n      this.props.captureScroll && evt.stopPropagation();\n    }\n  }, {\n    key: \"_onDrag\",\n    value: function _onDrag(evt) {\n      this.props.captureDrag && evt.stopPropagation();\n    }\n  }, {\n    key: \"_onClick\",\n    value: function _onClick(evt) {\n      this.props.captureClick && evt.stopPropagation();\n    }\n  }, {\n    key: \"_onDoubleClick\",\n    value: function _onDoubleClick(evt) {\n      this.props.captureDoubleClick && evt.stopPropagation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]), BaseControl;\n}(Component);\n\nexport { BaseControl as default };\nBaseControl.propTypes = propTypes, BaseControl.defaultProps = defaultProps, BaseControl.contextTypes = contextTypes;","map":null,"metadata":{},"sourceType":"module"}