{"ast":null,"code":"// Cheap lighting - single directional light, single dot product, one uniform\nimport project from '../project/project';\n/* eslint-disable camelcase */\n\nvar DEFAULT_LIGHT_DIRECTION = new Float32Array([1, 1, 2]);\nvar DEFAULT_MODULE_OPTIONS = {\n  lightDirection: DEFAULT_LIGHT_DIRECTION\n};\n\nfunction getUniforms() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_MODULE_OPTIONS;\n  var uniforms = {};\n\n  if (opts.lightDirection) {\n    uniforms.dirlight_uLightDirection = opts.lightDirection;\n  }\n\n  return uniforms;\n} // TODO - reuse normal from geometry module\n\n\nvar vs = null;\nvar fs = \"uniform vec3 dirlight_uLightDirection;\\n\\n/*\\n * Returns color attenuated by angle from light source\\n */\\nvec4 dirlight_filterColor(vec4 color) {\\n  vec3 normal = project_getNormal_World();\\n  float d = abs(dot(normalize(normal), normalize(dirlight_uLightDirection)));\\n  return vec4(color.rgb * d, color.a);\\n}\\n\";\nexport default {\n  name: 'dirlight',\n  vs: vs,\n  fs: fs,\n  getUniforms: getUniforms,\n  dependencies: [project]\n};","map":null,"metadata":{},"sourceType":"module"}