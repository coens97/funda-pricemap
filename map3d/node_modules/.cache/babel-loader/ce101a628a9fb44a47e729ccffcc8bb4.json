{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _viewportMercatorProject = require('viewport-mercator-project');\n\nvar _globals = require('../utils/globals');\n\nvar _autobind = require('../utils/autobind');\n\nvar _autobind2 = _interopRequireDefault(_autobind);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar propTypes = {\n  redraw: _propTypes2.default.func.isRequired\n}; // Copyright (c) 2015 Uber Technologies, Inc.\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar contextTypes = {\n  viewport: _propTypes2.default.instanceOf(_viewportMercatorProject.PerspectiveMercatorViewport),\n  isDragging: _propTypes2.default.bool\n};\n\nvar CanvasOverlay = function (_Component) {\n  (0, _inherits3.default)(CanvasOverlay, _Component);\n\n  function CanvasOverlay(props) {\n    (0, _classCallCheck3.default)(this, CanvasOverlay);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (CanvasOverlay.__proto__ || (0, _getPrototypeOf2.default)(CanvasOverlay)).call(this, props));\n\n    (0, _autobind2.default)(_this);\n    return _this;\n  }\n\n  (0, _createClass3.default)(CanvasOverlay, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._redraw();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._redraw();\n    }\n  }, {\n    key: '_redraw',\n    value: function _redraw() {\n      var pixelRatio = _globals.window.devicePixelRatio || 1;\n      var canvas = this._canvas;\n      var ctx = canvas.getContext('2d');\n      ctx.save();\n      ctx.scale(pixelRatio, pixelRatio);\n      var _context = this.context,\n          viewport = _context.viewport,\n          isDragging = _context.isDragging;\n      this.props.redraw({\n        width: viewport.width,\n        height: viewport.height,\n        ctx: ctx,\n        isDragging: isDragging,\n        project: viewport.project.bind(viewport),\n        unproject: viewport.unproject.bind(viewport)\n      });\n      ctx.restore();\n    }\n  }, {\n    key: '_canvasLoaded',\n    value: function _canvasLoaded(ref) {\n      this._canvas = ref;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var pixelRatio = _globals.window.devicePixelRatio || 1;\n      var _context$viewport = this.context.viewport,\n          width = _context$viewport.width,\n          height = _context$viewport.height;\n      return (0, _react.createElement)('canvas', {\n        ref: this._canvasLoaded,\n        width: width * pixelRatio,\n        height: height * pixelRatio,\n        style: {\n          width: width + 'px',\n          height: height + 'px',\n          position: 'absolute',\n          pointerEvents: 'none',\n          left: 0,\n          top: 0\n        }\n      });\n    }\n  }]);\n  return CanvasOverlay;\n}(_react.Component);\n\nexports.default = CanvasOverlay;\nCanvasOverlay.displayName = 'CanvasOverlay';\nCanvasOverlay.propTypes = propTypes;\nCanvasOverlay.contextTypes = contextTypes;","map":null,"metadata":{},"sourceType":"script"}