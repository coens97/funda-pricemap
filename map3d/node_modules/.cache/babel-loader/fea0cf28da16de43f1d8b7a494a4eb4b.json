{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GESTURE_EVENT_ALIASES = exports.RECOGNIZERS = exports.EVENT_RECOGNIZER_MAP = exports.BASIC_EVENT_ALIASES = undefined;\n\nvar _hammerjs = require('hammerjs');\n/**\n * Only one set of basic input events will be fired by Hammer.js:\n * either pointer, touch, or mouse, depending on system support.\n * In order to enable an application to be agnostic of system support,\n * alias basic input events into \"classes\" of events: down, move, and up.\n * See `_onBasicInput()` for usage of these aliases.\n */\n\n\nvar BASIC_EVENT_ALIASES = exports.BASIC_EVENT_ALIASES = {\n  pointerdown: 'pointerdown',\n  pointermove: 'pointermove',\n  pointerup: 'pointerup',\n  touchstart: 'pointerdown',\n  touchmove: 'pointermove',\n  touchend: 'pointerup',\n  mousedown: 'pointerdown',\n  mousemove: 'pointermove',\n  mouseup: 'pointerup'\n};\n/**\n * \"Gestural\" events are those that have semantic meaning beyond the basic input event,\n * e.g. a click or tap is a sequence of `down` and `up` events with no `move` event in between.\n * Hammer.js handles these with its Recognizer system;\n * this block maps event names to the Recognizers required to detect the events.\n */\n\nvar EVENT_RECOGNIZER_MAP = exports.EVENT_RECOGNIZER_MAP = {\n  tap: 'tap',\n  doubletap: 'doubletap',\n  press: 'press',\n  pinch: 'pinch',\n  pinchin: 'pinch',\n  pinchout: 'pinch',\n  pinchstart: 'pinch',\n  pinchmove: 'pinch',\n  pinchend: 'pinch',\n  pinchcancel: 'pinch',\n  rotate: 'rotate',\n  rotatestart: 'rotate',\n  rotatemove: 'rotate',\n  rotateend: 'rotate',\n  rotatecancel: 'rotate',\n  pan: 'pan',\n  panstart: 'pan',\n  panmove: 'pan',\n  panup: 'pan',\n  pandown: 'pan',\n  panleft: 'pan',\n  panright: 'pan',\n  panend: 'pan',\n  pancancel: 'pan',\n  swipe: 'swipe',\n  swipeleft: 'swipe',\n  swiperight: 'swipe',\n  swipeup: 'swipe',\n  swipedown: 'swipe'\n};\nvar RECOGNIZERS = exports.RECOGNIZERS = [[_hammerjs.Rotate, {\n  enable: false\n}], [_hammerjs.Pinch, {\n  enable: false\n}, ['rotate']], [_hammerjs.Pan, {\n  threshold: 10,\n  enable: false\n}], [_hammerjs.Swipe, {\n  enable: false\n}], [_hammerjs.Press, {\n  enable: false\n}], [_hammerjs.Tap, {\n  event: 'doubletap',\n  taps: 2,\n  enable: false\n}], [_hammerjs.Tap, {\n  enable: false\n}]];\n/**\n * Map gestural events typically provided by browsers\n * that are not reported in 'hammer.input' events\n * to corresponding Hammer.js gestures.\n */\n\nvar GESTURE_EVENT_ALIASES = exports.GESTURE_EVENT_ALIASES = {\n  click: 'tap',\n  mousedown: 'pointerdown',\n  mousemove: 'pointermove',\n  mouseup: 'pointerup'\n};","map":null,"metadata":{},"sourceType":"script"}