{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\"; //\n// A composite render pass.\n//\n// Attribution: This class and the multipass system were inspired by\n// the THREE.js EffectComposer and *Pass classes\n\nimport Pass from './pass';\n\nvar CompositePass =\n/*#__PURE__*/\nfunction (_Pass) {\n  _inherits(CompositePass, _Pass);\n\n  function CompositePass(gl, props) {\n    _classCallCheck(this, CompositePass);\n\n    props = Array.isArray(props) ? {\n      passes: props\n    } : props;\n    return _possibleConstructorReturn(this, _getPrototypeOf(CompositePass).call(this, gl, Object.assign({\n      id: 'composite-pass'\n    }, props)));\n  } // Override render() to just forward the call\n\n\n  _createClass(CompositePass, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$passes = this.props.passes,\n          passes = _this$props$passes === void 0 ? [] : _this$props$passes;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = passes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var pass = _step.value;\n          pass.render.apply(pass, arguments);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }]);\n\n  return CompositePass;\n}(Pass);\n\nexport { CompositePass as default };","map":null,"metadata":{},"sourceType":"module"}