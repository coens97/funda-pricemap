{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\"; //\n// A pass that clears the input buffer or the screen.\n//\n// Attribution: This class and the multipass system were inspired by\n// the THREE.js EffectComposer and *Pass classes\n\nimport Pass from './pass';\n\nvar ClearPass =\n/*#__PURE__*/\nfunction (_Pass) {\n  _inherits(ClearPass, _Pass);\n\n  function ClearPass(gl) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, ClearPass);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ClearPass).call(this, gl, Object.assign({\n      id: 'clear-pass'\n    }, props)));\n  } // TODO - add support for colors, align with model.clear and framebuffer.clear\n  // TODO - integrate with luma.gl clear, make sure right buffer is cleared\n\n\n  _createClass(ClearPass, [{\n    key: \"_renderPass\",\n    value: function _renderPass(_ref) {\n      var gl = _ref.gl;\n      var _this$props$clearBits = this.props.clearBits,\n          clearBits = _this$props$clearBits === void 0 ? 16384 | 256 : _this$props$clearBits;\n      gl.clear(clearBits);\n    }\n  }]);\n\n  return ClearPass;\n}(Pass);\n\nexport { ClearPass as default };","map":null,"metadata":{},"sourceType":"module"}