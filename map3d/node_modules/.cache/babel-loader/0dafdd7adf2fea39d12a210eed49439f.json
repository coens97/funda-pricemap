{"ast":null,"code":"// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default \"\\nconst vec2 WORLD_SCALE_FP64 = vec2(81.4873275756836, 0.0000032873668232014097);\\n\\nuniform vec2 project64_uScale;\\nuniform vec2 project_uViewProjectionMatrixFP64[16];\\n\\n// longitude: lnglat_fp64.xy; latitude: lnglat_fp64.zw\\nvoid mercatorProject_fp64(vec4 lnglat_fp64, out vec2 out_val[2]) {\\n\\n#if defined(NVIDIA_FP64_WORKAROUND)\\n  out_val[0] = sum_fp64(radians_fp64(lnglat_fp64.xy), PI_FP64 * ONE);\\n#else\\n  out_val[0] = sum_fp64(radians_fp64(lnglat_fp64.xy), PI_FP64);\\n#endif\\n  out_val[1] = sub_fp64(PI_FP64,\\n    log_fp64(tan_fp64(sum_fp64(PI_4_FP64, radians_fp64(lnglat_fp64.zw) / 2.0))));\\n  return;\\n}\\n\\nvoid project_position_fp64(vec4 position_fp64, out vec2 out_val[2]) {\\n  vec2 pos_fp64[2];\\n  mercatorProject_fp64(position_fp64, pos_fp64);\\n  vec2 x_fp64 = mul_fp64(pos_fp64[0], project64_uScale);\\n  vec2 y_fp64 = mul_fp64(pos_fp64[1], project64_uScale);\\n  out_val[0] = mul_fp64(x_fp64, WORLD_SCALE_FP64);\\n  out_val[1] = mul_fp64(y_fp64, WORLD_SCALE_FP64);\\n\\n  return;\\n}\\n\\nvec4 project_to_clipspace_fp64(vec2 vertex_pos_modelspace[4]) {\\n  vec2 vertex_pos_clipspace[4];\\n  mat4_vec4_mul_fp64(project_uViewProjectionMatrixFP64, vertex_pos_modelspace,\\n    vertex_pos_clipspace);\\n  return vec4(\\n    vertex_pos_clipspace[0].x,\\n    vertex_pos_clipspace[1].x,\\n    vertex_pos_clipspace[2].x,\\n    vertex_pos_clipspace[3].x\\n    );\\n}\\n\";","map":null,"metadata":{},"sourceType":"module"}