{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n} // This function is needed in initialization stages,\n// make sure it can be imported in isolation\n\n/* global process */\n\n\nimport isElectron from './is-electron';\nvar isNode = (typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) === 'object' && String(process) === '[object process]' && !process.browser;\nvar isBrowser = !isNode || isElectron; // document does not exist on worker thread\n\nexport var isBrowserMainThread = isBrowser && typeof document !== 'undefined';\nexport default isBrowser;","map":null,"metadata":{},"sourceType":"module"}