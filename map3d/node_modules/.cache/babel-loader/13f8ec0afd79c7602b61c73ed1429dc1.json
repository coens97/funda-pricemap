{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport { PureComponent, createElement } from 'react';\nimport MapControllerJS from '../core/pure-js/map-controller-js';\n\nvar MapController = function (_PureComponent) {\n  _inherits(MapController, _PureComponent);\n\n  function MapController(props) {\n    _classCallCheck(this, MapController);\n\n    var _this = _possibleConstructorReturn(this, (MapController.__proto__ || Object.getPrototypeOf(MapController)).call(this, props));\n\n    _this.controller = null;\n    return _this;\n  }\n\n  _createClass(MapController, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.controller = new MapControllerJS(Object.assign({}, this.props, {\n        canvas: this.eventCanvas\n      }));\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(nextProps) {\n      this.controller.setProps(nextProps);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.controller.finalize();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          width = _props.width,\n          height = _props.height;\n      var eventCanvasStyle = {\n        width: width,\n        height: height,\n        position: 'relative'\n      };\n      return createElement('div', {\n        key: 'map-controls',\n        ref: function ref(c) {\n          return _this2.eventCanvas = c;\n        },\n        style: eventCanvasStyle\n      }, this.props.children);\n    }\n  }]);\n\n  return MapController;\n}(PureComponent);\n\nexport default MapController;\nMapController.displayName = 'MapController';\nMapController.propTypes = MapControllerJS.propTypes;\nMapController.defaultProps = MapControllerJS.defaultProps;","map":null,"metadata":{},"sourceType":"module"}