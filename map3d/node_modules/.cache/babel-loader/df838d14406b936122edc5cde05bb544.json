{"ast":null,"code":"function _instanceof(left, right) {\n  return null != right && \"undefined\" != typeof Symbol && right[Symbol.hasInstance] ? right[Symbol.hasInstance](left) : left instanceof right;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!_instanceof(instance, Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\nfunction _defineProperties(target, props) {\n  for (var descriptor, i = 0; i < props.length; i++) {\n    descriptor = props[i], descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, \"value\" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;\n}\n\nimport { equals } from \"math.gl\";\nimport assert from \"../assert\";\n\nvar TransitionInterpolator = function () {\n  function TransitionInterpolator() {\n    _classCallCheck(this, TransitionInterpolator);\n  }\n\n  return _createClass(TransitionInterpolator, [{\n    key: \"arePropsEqual\",\n    value: function arePropsEqual(currentProps, nextProps) {\n      var _iteratorNormalCompletion = !0,\n          _didIteratorError = !1,\n          _iteratorError = void 0;\n\n      try {\n        for (var _step, key, _iterator = (this.propNames || [])[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = !0) {\n          if (key = _step.value, !equals(currentProps[key], nextProps[key])) return !1;\n        }\n      } catch (err) {\n        _didIteratorError = !0, _iteratorError = err;\n      } finally {\n        try {\n          _iteratorNormalCompletion || null == _iterator.return || _iterator.return();\n        } finally {\n          if (_didIteratorError) throw _iteratorError;\n        }\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"initializeProps\",\n    value: function initializeProps(startProps, endProps) {\n      return {\n        start: startProps,\n        end: endProps\n      };\n    }\n  }, {\n    key: \"interpolateProps\",\n    value: function interpolateProps() {\n      assert(!1, \"interpolateProps is not implemented\");\n    }\n  }]), TransitionInterpolator;\n}();\n\nexport { TransitionInterpolator as default };","map":null,"metadata":{},"sourceType":"module"}