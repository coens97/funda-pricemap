{"ast":null,"code":"function _instanceof(left, right) {\n  return null != right && \"undefined\" != typeof Symbol && right[Symbol.hasInstance] ? right[Symbol.hasInstance](left) : left instanceof right;\n}\n\nfunction _typeof(obj) {\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [],\n      _n = !0,\n      _d = !1,\n      _e = void 0;\n\n  try {\n    for (var _s, _i = arr[Symbol.iterator](); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0) {\n      ;\n    }\n  } catch (err) {\n    _d = !0, _e = err;\n  } finally {\n    try {\n      _n || null == _i[\"return\"] || _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!_instanceof(instance, Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\nfunction _defineProperties(target, props) {\n  for (var descriptor, i = 0; i < props.length; i++) {\n    descriptor = props[i], descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, \"value\" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  return call && (\"object\" === _typeof(call) || \"function\" == typeof call) ? call : _assertThisInitialized(self);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (\"function\" != typeof superClass && null !== superClass) throw new TypeError(\"Super expression must either be null or a function\");\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: !0,\n      configurable: !0\n    }\n  }), superClass && _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  return _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    return o.__proto__ = p, o;\n  }, _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (void 0 === self) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return self;\n}\n\nimport { createElement } from \"react\";\nimport PropTypes from \"prop-types\";\nimport BaseControl from \"./base-control\";\nimport { getDynamicPosition, ANCHOR_POSITION } from \"../utils/dynamic-position\";\n\nvar propTypes = Object.assign({}, BaseControl.propTypes, {\n  className: PropTypes.string,\n  longitude: PropTypes.number.isRequired,\n  latitude: PropTypes.number.isRequired,\n  offsetLeft: PropTypes.number,\n  offsetTop: PropTypes.number,\n  tipSize: PropTypes.number,\n  closeButton: PropTypes.bool,\n  closeOnClick: PropTypes.bool,\n  anchor: PropTypes.oneOf(Object.keys(ANCHOR_POSITION)),\n  dynamicPosition: PropTypes.bool,\n  onClose: PropTypes.func\n}),\n    defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: \"\",\n  offsetLeft: 0,\n  offsetTop: 0,\n  tipSize: 10,\n  anchor: \"bottom\",\n  dynamicPosition: !0,\n  closeButton: !0,\n  closeOnClick: !0,\n  onClose: function onClose() {}\n}),\n    Popup = function (_BaseControl) {\n  function Popup(props) {\n    var _this;\n\n    return _classCallCheck(this, Popup), _this = _possibleConstructorReturn(this, (Popup.__proto__ || Object.getPrototypeOf(Popup)).call(this, props)), _this._getPosition = _this._getPosition.bind(_assertThisInitialized(_this)), _this._onClose = _this._onClose.bind(_assertThisInitialized(_this)), _this._contentLoaded = _this._contentLoaded.bind(_assertThisInitialized(_this)), _this._renderTip = _this._renderTip.bind(_assertThisInitialized(_this)), _this._renderContent = _this._renderContent.bind(_assertThisInitialized(_this)), _this._closeOnClick = !1, _this;\n  }\n\n  return _inherits(Popup, _BaseControl), _createClass(Popup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.forceUpdate();\n    }\n  }, {\n    key: \"_getPosition\",\n    value: function _getPosition(x, y) {\n      var viewport = this.context.viewport,\n          _this$props = this.props,\n          anchor = _this$props.anchor,\n          dynamicPosition = _this$props.dynamicPosition,\n          tipSize = _this$props.tipSize;\n      return this._content ? dynamicPosition ? getDynamicPosition({\n        x: x,\n        y: y,\n        anchor: anchor,\n        padding: tipSize,\n        width: viewport.width,\n        height: viewport.height,\n        selfWidth: this._content.clientWidth,\n        selfHeight: this._content.clientHeight\n      }) : anchor : anchor;\n    }\n  }, {\n    key: \"_onClick\",\n    value: function _onClick(evt) {\n      this.props.captureClick && evt.stopPropagation(), (this.props.closeOnClick || this._closeOnClick) && this.props.onClose();\n    }\n  }, {\n    key: \"_onClose\",\n    value: function _onClose() {\n      this._closeOnClick = !0;\n    }\n  }, {\n    key: \"_contentLoaded\",\n    value: function _contentLoaded(ref) {\n      this._content = ref;\n    }\n  }, {\n    key: \"_renderTip\",\n    value: function _renderTip() {\n      var tipSize = this.props.tipSize;\n      return createElement(\"div\", {\n        key: \"tip\",\n        className: \"mapboxgl-popup-tip\",\n        style: {\n          borderWidth: tipSize\n        }\n      });\n    }\n  }, {\n    key: \"_renderContent\",\n    value: function _renderContent() {\n      var _this$props2 = this.props,\n          closeButton = _this$props2.closeButton,\n          children = _this$props2.children;\n      return createElement(\"div\", {\n        key: \"content\",\n        ref: this._contentLoaded,\n        className: \"mapboxgl-popup-content\"\n      }, [closeButton && createElement(\"button\", {\n        key: \"close-button\",\n        className: \"mapboxgl-popup-close-button\",\n        type: \"button\",\n        onClick: this._onClose\n      }, \"\\xD7\"), children]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          longitude = _this$props3.longitude,\n          latitude = _this$props3.latitude,\n          offsetLeft = _this$props3.offsetLeft,\n          offsetTop = _this$props3.offsetTop,\n          _this$context$viewpor = this.context.viewport.project([longitude, latitude]),\n          _this$context$viewpor2 = _slicedToArray(_this$context$viewpor, 2),\n          x = _this$context$viewpor2[0],\n          y = _this$context$viewpor2[1],\n          positionType = this._getPosition(x, y),\n          anchorPosition = ANCHOR_POSITION[positionType],\n          containerStyle = {\n        position: \"absolute\",\n        left: x + offsetLeft,\n        top: y + offsetTop,\n        transform: \"translate(\".concat(100 * -anchorPosition.x, \"%, \").concat(100 * -anchorPosition.y, \"%)\")\n      };\n\n      return createElement(\"div\", {\n        className: \"mapboxgl-popup mapboxgl-popup-anchor-\".concat(positionType, \" \").concat(className),\n        style: containerStyle,\n        ref: this._onContainerLoad\n      }, [this._renderTip(), this._renderContent()]);\n    }\n  }]), Popup;\n}(BaseControl);\n\nexport { Popup as default };\nPopup.displayName = \"Popup\", Popup.propTypes = propTypes, Popup.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"module"}