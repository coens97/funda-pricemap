{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport { Vector3, experimental } from 'math.gl';\nvar SphericalCoordinates = experimental.SphericalCoordinates;\nimport assert from 'assert';\nvar defaultState = {\n  position: [0, 0, 0],\n  lookAt: [0, 0, 0],\n  up: [0, 0, 1],\n  rotationX: 0,\n  rotationY: 0,\n  fov: 50,\n  near: 1,\n  far: 100\n};\n/* Helpers */\n\nfunction ensureFinite(value, fallbackValue) {\n  return Number.isFinite(value) ? value : fallbackValue;\n}\n\nvar DEFAULT_POSITION = [0, 0, 0];\n\nvar ViewState = function () {\n  function ViewState(opts) {\n    _classCallCheck(this, ViewState);\n\n    var width = opts.width,\n        height = opts.height,\n        _opts$position = opts.position,\n        position = _opts$position === undefined ? DEFAULT_POSITION : _opts$position,\n        bearing = opts.bearing,\n        pitch = opts.pitch,\n        longitude = opts.longitude,\n        latitude = opts.latitude,\n        zoom = opts.zoom;\n    assert(Number.isFinite(width), '`width` must be supplied');\n    assert(Number.isFinite(height), '`height` must be supplied');\n    this._viewportProps = this._applyConstraints(Object.assign({}, opts, {\n      width: width,\n      height: height,\n      position: new Vector3(ensureFinite(position && position[0], defaultState.position[0]), ensureFinite(position && position[1], defaultState.position[1]), ensureFinite(position && position[2], defaultState.position[2])),\n      bearing: ensureFinite(bearing, defaultState.bearing),\n      pitch: ensureFinite(pitch, defaultState.pitch),\n      longitude: longitude,\n      latitude: latitude,\n      zoom: zoom\n    }));\n  }\n\n  _createClass(ViewState, [{\n    key: 'getViewportProps',\n    value: function getViewportProps() {\n      return this._viewportProps;\n    }\n  }, {\n    key: 'getDirection',\n    value: function getDirection() {\n      var spherical = new SphericalCoordinates({\n        bearing: this._viewportProps.bearing,\n        pitch: this._viewportProps.pitch\n      });\n      var direction = spherical.toVector3().normalize();\n      return direction;\n    }\n  }, {\n    key: 'getDirectionFromBearing',\n    value: function getDirectionFromBearing(bearing) {\n      var spherical = new SphericalCoordinates({\n        bearing: bearing,\n        pitch: 90\n      });\n      var direction = spherical.toVector3().normalize();\n      return direction;\n    } // Redefined by subclass\n    // Apply any constraints (mathematical or defined by _viewportProps) to map state\n\n  }, {\n    key: '_applyConstraints',\n    value: function _applyConstraints(props) {\n      return props;\n    }\n  }]);\n\n  return ViewState;\n}();\n\nexport default ViewState;","map":null,"metadata":{},"sourceType":"module"}