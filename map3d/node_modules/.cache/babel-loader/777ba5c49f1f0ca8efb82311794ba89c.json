{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport { Model } from '../core';\nimport { SphereGeometry } from '../geometry';\nimport { uid } from '../utils';\n\nvar Sphere =\n/*#__PURE__*/\nfunction (_Model) {\n  _inherits(Sphere, _Model);\n\n  function Sphere(gl) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Sphere);\n\n    var _opts$id = opts.id,\n        id = _opts$id === void 0 ? uid('sphere') : _opts$id;\n    return _possibleConstructorReturn(this, _getPrototypeOf(Sphere).call(this, gl, Object.assign({}, opts, {\n      id: id,\n      geometry: new SphereGeometry(opts)\n    })));\n  }\n\n  return Sphere;\n}(Model);\n\nexport { Sphere as default };","map":null,"metadata":{},"sourceType":"module"}