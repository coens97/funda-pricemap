{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setPathPrefix = setPathPrefix;\nexports.loadFile = loadFile;\nexports.loadImage = loadImage;\n\nvar _browserRequestFile = require('./browser-request-file');\n\nvar pathPrefix = '';\n/*\n * Set a relative path prefix\n */\n\nfunction setPathPrefix(prefix) {\n  pathPrefix = prefix;\n}\n\nfunction loadFile(url, opts) {\n  if (typeof url !== 'string' && !opts) {\n    // TODO - warn for deprecated mode\n    opts = url;\n    url = opts.url;\n  }\n\n  opts.url = pathPrefix ? pathPrefix + url : url;\n  return (0, _browserRequestFile.requestFile)(opts);\n}\n/* global Image */\n\n/*\n * Loads images asynchronously\n * image.crossOrigin can be set via opts.crossOrigin, default to 'anonymous'\n * returns a promise tracking the load\n */\n\n\nfunction loadImage(url, opts) {\n  url = pathPrefix ? pathPrefix + url : url;\n  return new Promise(function (resolve, reject) {\n    try {\n      var image = new Image();\n\n      image.onload = function () {\n        return resolve(image);\n      };\n\n      image.onerror = function () {\n        return reject(new Error('Could not load image ' + url + '.'));\n      };\n\n      image.crossOrigin = opts && opts.crossOrigin || 'anonymous';\n      image.src = url;\n    } catch (error) {\n      reject(error);\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"script"}