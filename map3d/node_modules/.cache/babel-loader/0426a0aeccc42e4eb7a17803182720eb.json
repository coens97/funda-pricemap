{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _RENDERBUFFER_FORMATS;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* eslint-disable no-inline-comments */\n\n\nimport GL from './gl-constants';\nimport { isWebGL2 } from './context';\nimport Resource from './resource';\nimport assert from 'assert'; // Define local GL constants to optimize minification\n\nvar GL_RENDERBUFFER = 0x8D41;\nvar GL_SAMPLES = 0x80A9;\nvar GL_RENDERBUFFER_WIDTH = 0x8D42;\nvar GL_RENDERBUFFER_HEIGHT = 0x8D43;\nvar GL_RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;\nvar GL_RENDERBUFFER_SAMPLES = 0x8CAB; // Define local extension strings to optimize minification\n// const SRGB = 'EXT_sRGB';\n// const CB_FLOAT_WEBGL1 = 'WEBGL_color_buffer_float';\n\nvar CB_FLOAT_WEBGL2 = 'EXT_color_buffer_float'; // const CB_HALF_FLOAT_WEBGL1 = 'EXT_color_buffer_half_float';\n\nexport var RENDERBUFFER_FORMATS = (_RENDERBUFFER_FORMATS = {}, _defineProperty(_RENDERBUFFER_FORMATS, GL.DEPTH_COMPONENT16, {}), _defineProperty(_RENDERBUFFER_FORMATS, GL.DEPTH_COMPONENT24, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.DEPTH_COMPONENT32F, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.STENCIL_INDEX8, {}), _defineProperty(_RENDERBUFFER_FORMATS, GL.DEPTH_STENCIL, {}), _defineProperty(_RENDERBUFFER_FORMATS, GL.DEPTH24_STENCIL8, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.DEPTH32F_STENCIL8, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RGBA4, {}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RGB565, {}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RGB5_A1, {}), _defineProperty(_RENDERBUFFER_FORMATS, GL.R8, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.R8UI, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.R8I, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.R16UI, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.R16I, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.R32UI, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.R32I, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RG8, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RG8UI, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RG8I, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RG16UI, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RG16I, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RG32UI, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RG32I, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RGB8, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RGBA8, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RGB10_A2, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RGBA8UI, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RGBA8I, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RGB10_A2UI, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RGBA16UI, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RGBA16I, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RGBA32I, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RGBA32UI, {\n  gl2: true\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.R16F, {\n  gl2: CB_FLOAT_WEBGL2\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RG16F, {\n  gl2: CB_FLOAT_WEBGL2\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RGBA16F, {\n  gl2: CB_FLOAT_WEBGL2\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.R32F, {\n  gl2: CB_FLOAT_WEBGL2\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RG32F, {\n  gl2: CB_FLOAT_WEBGL2\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.RGBA32F, {\n  gl2: CB_FLOAT_WEBGL2\n}), _defineProperty(_RENDERBUFFER_FORMATS, GL.R11F_G11F_B10F, {\n  gl2: CB_FLOAT_WEBGL2\n}), _RENDERBUFFER_FORMATS);\n\nfunction isFormatSupported(gl, format, formats) {\n  // assert(isWebGL(gl), ERR_WEBGL);\n  var info = formats[format];\n\n  if (!info) {\n    return false;\n  }\n\n  var value = isWebGL2(gl) ? info.gl2 || info.gl1 : info.gl1;\n\n  if (typeof value === 'string') {\n    return gl.getExtension(value);\n  }\n\n  return value;\n}\n\nvar Renderbuffer =\n/*#__PURE__*/\nfunction (_Resource) {\n  _inherits(Renderbuffer, _Resource);\n\n  _createClass(Renderbuffer, null, [{\n    key: 'isSupported',\n    value: function isSupported(gl) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          format = _ref.format;\n\n      return !format || isFormatSupported(gl, format, RENDERBUFFER_FORMATS);\n    }\n  }, {\n    key: 'getSamplesForFormat',\n    value: function getSamplesForFormat(gl, _ref2) {\n      var format = _ref2.format; // Polyfilled to return [0] under WebGL1\n\n      return gl.getInternalformatParameter(GL_RENDERBUFFER, format, GL_SAMPLES);\n    }\n  }]);\n\n  function Renderbuffer(gl) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Renderbuffer);\n\n    var _this = _possibleConstructorReturn(this, (Renderbuffer.__proto__ || Object.getPrototypeOf(Renderbuffer)).call(this, gl, opts));\n\n    _this.initialize(opts);\n\n    Object.seal(_this);\n    return _this;\n  } // Creates and initializes a renderbuffer object's data store\n\n\n  _createClass(Renderbuffer, [{\n    key: 'initialize',\n    value: function initialize(_ref3) {\n      var format = _ref3.format,\n          _ref3$width = _ref3.width,\n          width = _ref3$width === undefined ? 1 : _ref3$width,\n          _ref3$height = _ref3.height,\n          height = _ref3$height === undefined ? 1 : _ref3$height,\n          _ref3$samples = _ref3.samples,\n          samples = _ref3$samples === undefined ? 0 : _ref3$samples;\n      assert(format, 'Needs format');\n      this.gl.bindRenderbuffer(GL_RENDERBUFFER, this.handle);\n\n      if (samples !== 0 && isWebGL2(this.gl)) {\n        this.gl.renderbufferStorageMultisample(GL_RENDERBUFFER, samples, format, width, height);\n      } else {\n        this.gl.renderbufferStorage(GL_RENDERBUFFER, format, width, height);\n      } // this.gl.bindRenderbuffer(GL_RENDERBUFFER, null);\n\n\n      this.format = format;\n      this.width = width;\n      this.height = height;\n      this.samples = samples;\n      return this;\n    }\n  }, {\n    key: 'resize',\n    value: function resize(_ref4) {\n      var width = _ref4.width,\n          height = _ref4.height; // Don't resize if width/height haven't changed\n\n      if (width !== this.width || height !== this.height) {\n        return this.initialize({\n          width: width,\n          height: height,\n          format: this.format,\n          samples: this.samples\n        });\n      }\n\n      return this;\n    } // PRIVATE METHODS\n\n  }, {\n    key: '_createHandle',\n    value: function _createHandle() {\n      return this.gl.createRenderbuffer();\n    }\n  }, {\n    key: '_deleteHandle',\n    value: function _deleteHandle() {\n      this.gl.deleteRenderbuffer(this.handle);\n    }\n  }, {\n    key: '_syncHandle',\n    value: function _syncHandle(handle) {\n      this.format = this.getParameter(GL_RENDERBUFFER_INTERNAL_FORMAT);\n      this.width = this.getParameter(GL_RENDERBUFFER_WIDTH);\n      this.height = this.getParameter(GL_RENDERBUFFER_HEIGHT);\n      this.samples = this.getParameter(GL_RENDERBUFFER_SAMPLES);\n    } // @param {Boolean} opt.autobind=true - method call will bind/unbind object\n    // @returns {GLenum|GLint} - depends on pname\n\n  }, {\n    key: '_getParameter',\n    value: function _getParameter(pname) {\n      this.gl.bindRenderbuffer(GL_RENDERBUFFER, this.handle);\n      var value = this.gl.getRenderbufferParameter(GL_RENDERBUFFER, pname); // this.gl.bindRenderbuffer(GL_RENDERBUFFER, null);\n\n      return value;\n    }\n  }]);\n\n  return Renderbuffer;\n}(Resource);\n\nexport default Renderbuffer;","map":null,"metadata":{},"sourceType":"module"}