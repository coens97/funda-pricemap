{"ast":null,"code":"var _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nimport ChoroplethLayer from '../choropleth-layer/choropleth-layer';\nimport { fp64ify, log } from '../../../lib/utils';\nimport flattenDeep from 'lodash.flattendeep';\nimport choroplethVertex64 from './choropleth-layer-vertex-64.glsl';\n\nvar ChoroplethLayer64 = function (_ChoroplethLayer) {\n  _inherits(ChoroplethLayer64, _ChoroplethLayer);\n\n  function ChoroplethLayer64(props) {\n    _classCallCheck(this, ChoroplethLayer64);\n\n    var _this = _possibleConstructorReturn(this, (ChoroplethLayer64.__proto__ || Object.getPrototypeOf(ChoroplethLayer64)).call(this, props));\n\n    log.once('ChoroplethLayer64 is deprecated. Consider using GeoJsonLayer instead');\n    return _this;\n  }\n\n  _createClass(ChoroplethLayer64, [{\n    key: 'getShaders',\n    value: function getShaders() {\n      return {\n        vs: choroplethVertex64,\n        fs: _get(ChoroplethLayer64.prototype.__proto__ || Object.getPrototypeOf(ChoroplethLayer64.prototype), 'getShaders', this).call(this).fs,\n        modules: ['project64']\n      };\n    }\n  }, {\n    key: 'initializeState',\n    value: function initializeState() {\n      _get(ChoroplethLayer64.prototype.__proto__ || Object.getPrototypeOf(ChoroplethLayer64.prototype), 'initializeState', this).call(this);\n\n      this.state.attributeManager.add({\n        positions64: {\n          size: 4,\n          update: this.calculatePositions64\n        },\n        heights64: {\n          size: 2,\n          update: this.calculateHeights64\n        }\n      });\n    }\n  }, {\n    key: 'calculatePositions64',\n    value: function calculatePositions64(attribute) {\n      var vertices = flattenDeep(this.state.choropleths);\n      attribute.value = new Float32Array(vertices.length / 3 * 4);\n\n      for (var index = 0; index < vertices.length / 3; index++) {\n        var _fp64ify = fp64ify(vertices[index * 3]);\n\n        var _fp64ify2 = _slicedToArray(_fp64ify, 2);\n\n        attribute.value[index * 4] = _fp64ify2[0];\n        attribute.value[index * 4 + 1] = _fp64ify2[1];\n\n        var _fp64ify3 = fp64ify(vertices[index * 3 + 1]);\n\n        var _fp64ify4 = _slicedToArray(_fp64ify3, 2);\n\n        attribute.value[index * 4 + 2] = _fp64ify4[0];\n        attribute.value[index * 4 + 3] = _fp64ify4[1];\n      }\n    }\n  }, {\n    key: 'calculateHeights64',\n    value: function calculateHeights64(attribute) {\n      var vertices = flattenDeep(this.state.choropleths);\n      attribute.value = new Float32Array(vertices.length / 3 * 2);\n\n      for (var index = 0; index < vertices.length / 3; index++) {\n        var _fp64ify5 = fp64ify(vertices[index * 3 + 2]);\n\n        var _fp64ify6 = _slicedToArray(_fp64ify5, 2);\n\n        attribute.value[index * 2] = _fp64ify6[0];\n        attribute.value[index * 2 + 1] = _fp64ify6[1];\n      }\n    }\n  }]);\n\n  return ChoroplethLayer64;\n}(ChoroplethLayer);\n\nexport default ChoroplethLayer64;\nChoroplethLayer64.layerName = 'ChoroplethLayer64';","map":null,"metadata":{},"sourceType":"module"}