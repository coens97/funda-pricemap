{"ast":null,"code":"// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n// Parse array or string color\nexport function parseColor(color) {\n  if (Array.isArray(color)) {\n    if (color.length === 3) {\n      return [color[0], color[1], color[2], 255];\n    }\n\n    return color;\n  }\n\n  if (typeof color === 'string') {\n    return parseHexColor(color);\n  }\n\n  return null;\n} // Parse a hex color\n\nexport function parseHexColor(color) {\n  var array = new Uint8ClampedArray(4);\n\n  if (color.length === 7) {\n    var value = parseInt(color.substring(1), 16);\n    array[0] = value / 65536;\n    array[1] = value / 256 % 256;\n    array[2] = value % 256;\n    array[3] = 255;\n  } else if (color.length === 9) {\n    var _value = parseInt(color.substring(1), 16);\n\n    array[0] = _value / 16777216;\n    array[1] = _value / 65536 % 256;\n    array[2] = _value / 256 % 256;\n    array[3] = _value % 256;\n  }\n\n  return array;\n}\nexport function setOpacity(color) {\n  var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 127;\n  return [color[0], color[1], color[2], opacity];\n}\nexport function applyOpacity(color) {\n  var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 127;\n  return [color[0], color[1], color[2], opacity];\n}","map":null,"metadata":{},"sourceType":"module"}