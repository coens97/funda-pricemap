{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: !0\n}), exports.formatTime = formatTime, exports.leftPad = leftPad, exports.rightPad = rightPad, exports.getSISuffix = getSISuffix, exports.formatSI = formatSI, exports.formatValue = formatValue, exports.formatImage = formatImage;\n\nfunction formatTime(ms) {\n  var formatted;\n  return formatted = 10 > ms ? ms.toFixed(2) + 'ms' : 100 > ms ? ms.toFixed(1) + 'ms' : 1e3 > ms ? ms.toFixed(0) + 'ms' : (ms / 1e3).toFixed(2) + 's', formatted;\n}\n\nfunction leftPad(string) {\n  var length = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 8,\n      padLength = Math.max(length - string.length, 0);\n  return '' + ' '.repeat(padLength) + string;\n}\n\nfunction rightPad(string) {\n  var length = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 8,\n      padLength = Math.max(length - string.length, 0);\n  return '' + string + ' '.repeat(padLength);\n}\n\nfunction splitIntoBaseAndExponent(number) {\n  var base = number,\n      exponent = 0;\n\n  if (0 !== number) {\n    for (; 10 <= base || -10 >= base;) {\n      base /= 10, exponent++;\n    }\n\n    for (; 1 > base && -1 < base;) {\n      base *= 10, exponent--;\n    }\n  }\n\n  return {\n    base: base,\n    exponent: exponent\n  };\n}\n\nfunction getSISuffix(multipleOf3) {\n  var SI_SUFFIXES = {\n    0: '',\n    1: 'K',\n    2: 'M',\n    3: 'G',\n    \"-1\": 'm',\n    \"-2\": '\\xB5',\n    \"-3\": 'n'\n  },\n      key = multipleOf3 + '';\n  return key in SI_SUFFIXES ? SI_SUFFIXES[key] : 'e' + 3 * multipleOf3;\n}\n\nfunction formatSI(number) {\n  var precision = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 3,\n      _splitIntoBaseAndExpo = splitIntoBaseAndExponent(number),\n      base = _splitIntoBaseAndExpo.base,\n      exponent = _splitIntoBaseAndExpo.exponent,\n      multipleOf3 = Math.floor(exponent / 3),\n      digits = base * Math.pow(10, exponent - 3 * multipleOf3);\n\n  return '' + digits.toPrecision(precision) + getSISuffix(multipleOf3);\n}\n\nfunction formatValue(v) {\n  var _Mathabs = Math.abs,\n      opts = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},\n      _opts$isInteger = opts.isInteger,\n      isInteger = void 0 !== _opts$isInteger && _opts$isInteger;\n  if (Array.isArray(v) || ArrayBuffer.isView(v)) return formatArrayValue(v, opts);\n  if (!Number.isFinite(v)) return v + '';\n  if (_Mathabs(v) < 1e-16) return isInteger ? '0' : '0.';\n  if (isInteger) return v.toFixed(0);\n  if (100 < _Mathabs(v) && 1e4 > _Mathabs(v)) return v.toFixed(0);\n  var string = v.toPrecision(2),\n      decimal = string.indexOf('.0');\n  return decimal === string.length - 2 ? string.slice(0, -1) : string;\n}\n\nfunction formatArrayValue(v, opts) {\n  for (var _opts$maxElts = opts.maxElts, maxElts = _opts$maxElts === void 0 ? 16 : _opts$maxElts, _opts$size = opts.size, size = _opts$size === void 0 ? 1 : _opts$size, string = '[', i = 0; i < v.length && i < maxElts; ++i) {\n    0 < i && (string += ',' + (0 == i % size ? ' ' : '')), string += formatValue(v[i], opts);\n  }\n\n  var terminator = v.length > maxElts ? '...' : ']';\n  return '' + string + terminator;\n}\n\nfunction formatImage(image, message, scale) {\n  var _Mathfloor = Math.floor,\n      maxWidth = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : 600,\n      imageUrl = image.src.replace(/\\(/g, '%28').replace(/\\)/g, '%29');\n  image.width > maxWidth && (scale = Math.min(scale, maxWidth / image.width));\n  var width = image.width * scale,\n      height = image.height * scale,\n      style = ['font-size:1px;', 'padding:' + _Mathfloor(height / 2) + 'px ' + _Mathfloor(width / 2) + 'px;', 'line-height:' + height + 'px;', 'background:url(' + imageUrl + ');', 'background-size:' + width + 'px ' + height + 'px;', 'color:transparent;'].join('');\n  return [message + ' %c+', style];\n}","map":null,"metadata":{},"sourceType":"script"}