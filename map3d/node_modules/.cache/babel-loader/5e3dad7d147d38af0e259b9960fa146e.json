{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _autobind = require('../utils/autobind');\n\nvar _autobind2 = _interopRequireDefault(_autobind);\n\nvar _viewportMercatorProject = require('viewport-mercator-project');\n\nvar _mapState = require('../utils/map-state');\n\nvar _mapState2 = _interopRequireDefault(_mapState);\n\nvar _deprecateWarn = require('../utils/deprecate-warn');\n\nvar _deprecateWarn2 = _interopRequireDefault(_deprecateWarn);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar propTypes = {\n  /**\n    * `onViewportChange` callback is fired when the user interacted with the\n    * map. The object passed to the callback contains `latitude`,\n    * `longitude` and `zoom` and additional state information.\n    */\n  onViewportChange: _propTypes2.default.func.isRequired\n};\nvar defaultProps = {\n  onViewportChange: function onViewportChange() {}\n};\nvar contextTypes = {\n  viewport: _propTypes2.default.instanceOf(_viewportMercatorProject.PerspectiveMercatorViewport)\n};\n/*\n * PureComponent doesn't update when context changes, so\n * implementing our own shouldComponentUpdate here.\n */\n\nvar NavigationControl = function (_Component) {\n  (0, _inherits3.default)(NavigationControl, _Component);\n\n  function NavigationControl(props) {\n    (0, _classCallCheck3.default)(this, NavigationControl);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (NavigationControl.__proto__ || (0, _getPrototypeOf2.default)(NavigationControl)).call(this, props));\n\n    (0, _autobind2.default)(_this); // Check for deprecated props\n\n    (0, _deprecateWarn2.default)(props);\n    return _this;\n  }\n\n  (0, _createClass3.default)(NavigationControl, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      return this.context.viewport.bearing !== nextContext.viewport.bearing;\n    }\n  }, {\n    key: '_updateViewport',\n    value: function _updateViewport(opts) {\n      var viewport = this.context.viewport;\n      var mapState = new _mapState2.default((0, _assign2.default)({}, viewport, opts)); // TODO(deprecate): remove this check when `onChangeViewport` gets deprecated\n\n      var onViewportChange = this.props.onChangeViewport || this.props.onViewportChange;\n      onViewportChange(mapState.getViewportProps());\n    }\n  }, {\n    key: '_onZoomIn',\n    value: function _onZoomIn() {\n      this._updateViewport({\n        zoom: this.context.viewport.zoom + 1\n      });\n    }\n  }, {\n    key: '_onZoomOut',\n    value: function _onZoomOut() {\n      this._updateViewport({\n        zoom: this.context.viewport.zoom - 1\n      });\n    }\n  }, {\n    key: '_onResetNorth',\n    value: function _onResetNorth() {\n      this._updateViewport({\n        bearing: 0\n      });\n    }\n  }, {\n    key: '_renderCompass',\n    value: function _renderCompass() {\n      var bearing = this.context.viewport.bearing;\n      return (0, _react.createElement)('span', {\n        className: 'mapboxgl-ctrl-compass-arrow',\n        style: {\n          transform: 'rotate(' + bearing + 'deg)'\n        }\n      });\n    }\n  }, {\n    key: '_renderButton',\n    value: function _renderButton(type, label, callback, children) {\n      return (0, _react.createElement)('button', {\n        key: type,\n        className: 'mapboxgl-ctrl-icon mapboxgl-ctrl-' + type,\n        type: 'button',\n        title: label,\n        onClick: callback,\n        children: children\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return (0, _react.createElement)('div', {\n        className: 'mapboxgl-ctrl mapboxgl-ctrl-group'\n      }, [this._renderButton('zoom-in', 'Zoom In', this._onZoomIn), this._renderButton('zoom-out', 'Zoom Out', this._onZoomOut), this._renderButton('compass', 'Reset North', this._onResetNorth, this._renderCompass())]);\n    }\n  }]);\n  return NavigationControl;\n}(_react.Component);\n\nexports.default = NavigationControl;\nNavigationControl.displayName = 'NavigationControl';\nNavigationControl.propTypes = propTypes;\nNavigationControl.defaultProps = defaultProps;\nNavigationControl.contextTypes = contextTypes;","map":null,"metadata":{},"sourceType":"script"}