{"ast":null,"code":"/**\n * Create a WebGL context for a canvas\n * Note calling this multiple time on the same canvas does return the same context\n */\nexport function createBrowserContext(_ref) {\n  var canvas = _ref.canvas,\n      _ref$opts = _ref.opts,\n      opts = _ref$opts === void 0 ? {} : _ref$opts,\n      _ref$onError = _ref.onError,\n      onError = _ref$onError === void 0 ? function (message) {\n    return null;\n  } : _ref$onError; // Try to extract any extra information about why context creation failed\n\n  function onContextCreationError(error) {\n    onError(\"WebGL context: \".concat(error.statusMessage || 'Unknown error'));\n  }\n\n  canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);\n  var _opts$webgl = opts.webgl1,\n      webgl1 = _opts$webgl === void 0 ? true : _opts$webgl,\n      _opts$webgl2 = opts.webgl2,\n      webgl2 = _opts$webgl2 === void 0 ? true : _opts$webgl2;\n  var gl = null; // Prefer webgl2 over webgl1, prefer conformant over experimental\n\n  if (webgl2) {\n    gl = gl || canvas.getContext('webgl2', opts);\n    gl = gl || canvas.getContext('experimental-webgl2', opts);\n  }\n\n  if (webgl1) {\n    gl = gl || canvas.getContext('webgl', opts);\n    gl = gl || canvas.getContext('experimental-webgl', opts);\n  }\n\n  canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);\n\n  if (!gl) {\n    return onError(\"Failed to create \".concat(webgl2 && !webgl1 ? 'WebGL2' : 'WebGL', \" context\"));\n  }\n\n  return gl;\n}","map":null,"metadata":{},"sourceType":"module"}