{"ast":null,"code":"// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable max-len */\n// Intialize globals, check version\nimport './lib/init'; // Import shaderlib to make sure shader modules are initialized\n\nimport './shaderlib'; // Core Library\n\nexport { COORDINATE_SYSTEM } from './lib/constants'; // Experimental Pure JS (non-React) bindings\n\nexport { default as Deck } from './lib/deck';\nexport { default as LayerManager } from './lib/layer-manager';\nexport { default as AttributeManager } from './lib/attribute-manager';\nexport { default as Layer } from './lib/layer';\nexport { default as CompositeLayer } from './lib/composite-layer'; // Viewports\n\nexport { default as Viewport } from './viewports/viewport';\nexport { default as WebMercatorViewport } from './viewports/web-mercator-viewport'; // Shader modules\n\nexport { default as project } from './shaderlib/project/project';\nexport { default as project64 } from './shaderlib/project64/project64';\nexport { default as lighting } from './shaderlib/lighting/lighting';\nexport { default as View } from './views/view';\nexport { default as MapView } from './views/map-view';\nexport { default as FirstPersonView } from './views/first-person-view';\nexport { default as ThirdPersonView } from './views/third-person-view';\nexport { default as OrbitView } from './views/orbit-view';\nexport { default as PerspectiveView } from './views/perspective-view';\nexport { default as OrthographicView } from './views/orthographic-view'; // Controllers\n\nexport { default as Controller } from './controllers/controller';\nexport { default as MapController } from './controllers/map-controller'; // Experimental Controllers\n\nexport { default as _FirstPersonController } from './controllers/first-person-controller';\nexport { default as _OrbitController } from './controllers/orbit-controller';\nexport { default as _OrthographicController } from './controllers/orthographic-controller'; // EXPERIMENTAL EXPORTS\n// Experimental Effects (non-React) bindings\n\nexport { default as _EffectManager } from './experimental/lib/effect-manager';\nexport { default as _Effect } from './experimental/lib/effect';\nexport { default as _ReflectionEffect } from './experimental/reflection-effect/reflection-effect'; // Eperimental Transitions\n\nexport { TRANSITION_EVENTS } from './controllers/transition-manager';\nexport { default as LinearInterpolator } from './transitions/linear-interpolator';\nexport { default as FlyToInterpolator } from './transitions/viewport-fly-to-interpolator'; // Layer utilities\n\nexport { default as log } from './utils/log';\nimport { flattenVertices, fillArray } from './utils/flatten'; // Export? move to luma.gl or math.gl?\n\nimport { default as BinSorter } from './utils/bin-sorter';\nimport { defaultColorRange } from './utils/color-utils';\nimport { linearScale, getLinearScale, quantizeScale, getQuantizeScale } from './utils/scale-utils';\nexport { default as _GPUGridAggregator } from './experimental/utils/gpu-grid-aggregation/gpu-grid-aggregator';\nexport { pointToDensityGridData as _pointToDensityGridData } from './experimental/utils/gpu-grid-aggregation/grid-aggregation-utils'; // Exports for layers\n// Experimental Features may change in minor version bumps, use at your own risk)\n\nexport var experimental = {\n  BinSorter: BinSorter,\n  linearScale: linearScale,\n  getLinearScale: getLinearScale,\n  quantizeScale: quantizeScale,\n  getQuantizeScale: getQuantizeScale,\n  defaultColorRange: defaultColorRange,\n  flattenVertices: flattenVertices,\n  fillArray: fillArray\n};","map":null,"metadata":{},"sourceType":"module"}