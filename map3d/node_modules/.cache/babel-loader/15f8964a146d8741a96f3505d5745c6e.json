{"ast":null,"code":"import { parsePropTypes } from './prop-types';\n\nfunction defaultGetUniforms(module, props) {\n  var uniforms = {};\n\n  if (props === undefined) {\n    for (var key in module.uniforms) {\n      uniforms[key] = module.uniforms[key].value;\n    }\n\n    return uniforms;\n  }\n\n  for (var _key in props) {\n    // TODO validate, clamp etc\n    uniforms[_key] = props[_key];\n  }\n\n  return uniforms;\n} // Note: modifies and returns the same module\n\n\nexport function normalizeShaderModule(module) {\n  if (!module.normalized) {\n    module.normalized = true; // Normalize uniforms\n\n    if (module.uniforms) {\n      var _parsePropTypes = parsePropTypes(module.uniforms),\n          propTypes = _parsePropTypes.propTypes;\n\n      module.uniforms = propTypes;\n    } // Build a getUniforms from the uniforms array\n\n\n    if (module.uniforms && !module.getUniforms) {\n      module.getUniforms = defaultGetUniforms.bind(null, module);\n    }\n  }\n\n  return module;\n}","map":null,"metadata":{},"sourceType":"module"}