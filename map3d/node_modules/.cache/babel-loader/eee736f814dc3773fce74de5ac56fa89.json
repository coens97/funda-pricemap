{"ast":null,"code":"// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { fp32 } from 'luma.gl';\nimport projectShader from './project.glsl';\nimport { getUniformsFromViewport } from './viewport-uniforms';\nvar INITIAL_MODULE_OPTIONS = {};\n\nfunction getUniforms() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_MODULE_OPTIONS;\n\n  if (opts.viewport) {\n    return getUniformsFromViewport(opts);\n  }\n\n  return {};\n}\n\nexport default {\n  name: 'project',\n  dependencies: [fp32],\n  vs: projectShader,\n  getUniforms: getUniforms,\n  deprecations: [// Removed custom picking uinforms\n  // These don't really belong here but we need to check them for all shaders\n  // the project module is by default included for all\n  {\n    type: 'uniform vec3',\n    old: 'selectedPickingColor',\n    new: \"luma.gl's picking module\"\n  }, {\n    type: 'uniform float',\n    old: 'renderPickingBuffer',\n    new: \"luma.gl's picking module\"\n  }, {\n    type: 'uniform float',\n    old: 'pickingEnabled',\n    new: \"luma.gl's picking module\"\n  }, // Removed project uniforms\n  {\n    type: 'uniform float',\n    old: 'projectionMode',\n    new: 'project_uCoordinateSystem'\n  }, {\n    type: 'uniform vec4',\n    old: 'projectionCenter',\n    new: 'project_uCenter'\n  }, {\n    type: 'uniform vec2',\n    old: 'projectionOrigin'\n  }, {\n    type: 'uniform mat4',\n    old: 'modelMatrix',\n    new: 'project_uModelMatrix'\n  }, {\n    type: 'uniform mat4',\n    old: 'viewMatrix'\n  }, {\n    type: 'uniform mat4',\n    old: 'projectionMatrix',\n    new: 'project_uViewProjectionMatrix'\n  }, {\n    type: 'uniform vec3',\n    old: 'projectionPixelsPerUnit',\n    new: 'project_uPixelsPerUnit'\n  }, {\n    type: 'uniform float',\n    old: 'projectionScale',\n    new: 'project_uScale'\n  }, {\n    type: 'uniform vec2',\n    old: 'viewportSize',\n    new: 'project_uViewportSize'\n  }, {\n    type: 'uniform float',\n    old: 'devicePixelRatio',\n    new: 'project_uDevicePixelRatio'\n  }, {\n    type: 'uniform vec3',\n    old: 'cameraPos',\n    new: 'project_uCameraPosition'\n  }, // Removed project functions\n  {\n    type: 'function',\n    old: 'scale',\n    new: 'project_scale'\n  }, {\n    type: 'function',\n    old: 'preproject',\n    new: 'project_position'\n  }, {\n    type: 'function',\n    old: 'project',\n    new: 'project_to_clipspace'\n  }]\n};","map":null,"metadata":{},"sourceType":"module"}