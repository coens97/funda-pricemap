{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar NULL_PICKING_COLOR = new Uint8Array([0, 0, 0]); // Encodes an index as a Uint8Array([r, g, b]) format picking color\n\nexport function encodePickingColor(i) {\n  return [i + 1 & 255, i + 1 >> 8 & 255, i + 1 >> 16 & 255];\n} // Decodes a picking color in [r, g, b] format to an index\n\nexport function decodePickingColor(color) {\n  // assert(color instanceof Uint8Array);\n  var _color = _slicedToArray(color, 3),\n      i1 = _color[0],\n      i2 = _color[1],\n      i3 = _color[2]; // 1 was added to seperate from no selection\n\n\n  var index = i1 + i2 * 256 + i3 * 65536 - 1;\n  return index;\n} // Return picking color representing no item at that pixel\n\nexport function getNullPickingColor() {\n  return NULL_PICKING_COLOR;\n}","map":null,"metadata":{},"sourceType":"module"}