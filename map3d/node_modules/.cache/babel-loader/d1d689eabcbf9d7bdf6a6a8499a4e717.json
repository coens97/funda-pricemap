{"ast":null,"code":"// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable max-len */\n// Intialize globals, check version\nimport './lib/init'; // Import shaderlib to make sure shader modules are initialized\n\nimport './shaderlib'; // Core Library\n\nexport { COORDINATE_SYSTEM } from './lib/constants';\nexport { default as LayerManager } from './lib/layer-manager';\nexport { default as AttributeManager } from './lib/attribute-manager';\nexport { default as Layer } from './lib/layer';\nexport { default as CompositeLayer } from './lib/composite-layer'; // Viewports\n\nexport { default as Viewport } from './viewports/viewport';\nexport { default as WebMercatorViewport } from './viewports/web-mercator-viewport';\nexport { default as PerspectiveViewport } from './viewports/perspective-viewport';\nexport { default as OrthographicViewport } from './viewports/orthographic-viewport'; // EXPERIMENTAL EXPORTS\n// Experimental Features (May change in minor version bumps, use at your own risk)\n\nimport { default as FirstPersonState } from './controllers/first-person-state';\nimport { default as OrbitState } from './controllers/orbit-state';\nimport { default as MapState } from './controllers/map-state'; // Experimental Controllers\n\nimport { default as Controller } from './controllers/viewport-controls';\nimport { default as MapController } from './controllers/map-controls';\nimport { default as FirstPersonViewport } from './viewports/first-person-viewport';\nimport { default as ThirdPersonViewport } from './viewports/third-person-viewport';\nimport { default as OrbitViewport } from './viewports/orbit-viewport'; // Experimental Pure JS (non-React) bindings\n\nimport { default as DeckGLJS } from './pure-js/deck-js';\nimport { default as MapControllerJS } from './pure-js/map-controller-js';\nimport { default as OrbitControllerJS } from './pure-js/orbit-controller-js'; // Experimental Effects (non-React) bindings\n\nimport { default as EffectManager } from './experimental/lib/effect-manager';\nimport { default as Effect } from './experimental/lib/effect'; // Eperimental Transitions\n\nimport { TRANSITION_EVENTS } from './lib/transition-manager';\nimport { default as LinearInterpolator } from './transitions/linear-interpolator';\nimport { default as ViewportFlyToInterpolator } from './transitions/viewport-fly-to-interpolator'; // INTERNAL EXPORTS\n\nimport TransitionManager from './lib/transition-manager';\nimport { extractViewportFrom } from './transitions/transition-utils'; // Layer utilities\n// Layer utilities\n\nimport { default as log } from './utils/log';\nimport { get } from './utils/get';\nimport { count } from './utils/count';\nimport { default as BinSorter } from './utils/bin-sorter';\nimport { defaultColorRange } from './utils/color-utils';\nimport { linearScale, getLinearScale, quantizeScale, getQuantizeScale } from './utils/scale-utils';\nimport { clamp } from './utils/scale-utils';\nimport { flatten, countVertices, flattenVertices, fillArray } from './utils/flatten'; // TODO - just expose as layer methods instead?\n\nimport { enable64bitSupport } from './utils/fp64';\nimport { fp64ify } from './utils/fp64';\nexport var experimental = {\n  ViewportControls: Controller,\n  FirstPersonState: FirstPersonState,\n  OrbitState: OrbitState,\n  MapState: MapState,\n  Controller: Controller,\n  MapController: MapController,\n  // FirstPersonController,\n  // OrbitController,\n  FirstPersonViewport: FirstPersonViewport,\n  ThirdPersonViewport: ThirdPersonViewport,\n  OrbitViewport: OrbitViewport,\n  DeckGLJS: DeckGLJS,\n  MapControllerJS: MapControllerJS,\n  OrbitControllerJS: OrbitControllerJS,\n  EffectManager: EffectManager,\n  Effect: Effect,\n  // Transitions\n  TRANSITION_EVENTS: TRANSITION_EVENTS,\n  LinearInterpolator: LinearInterpolator,\n  ViewportFlyToInterpolator: ViewportFlyToInterpolator,\n  // For react module\n  TransitionManager: TransitionManager,\n  extractViewportFrom: extractViewportFrom,\n  // For layers\n  BinSorter: BinSorter,\n  linearScale: linearScale,\n  getLinearScale: getLinearScale,\n  quantizeScale: quantizeScale,\n  getQuantizeScale: getQuantizeScale,\n  clamp: clamp,\n  defaultColorRange: defaultColorRange,\n  log: log,\n  get: get,\n  count: count,\n  flatten: flatten,\n  countVertices: countVertices,\n  flattenVertices: flattenVertices,\n  fillArray: fillArray,\n  enable64bitSupport: enable64bitSupport,\n  fp64ify: fp64ify\n};","map":null,"metadata":{},"sourceType":"module"}