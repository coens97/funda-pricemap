{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n} // WEBGL BUILT-IN TYPES\n// 1) Exports all WebGL constants as {GL}\n// 2) Enables app to \"import\" WebGL types\n//    - Importing these types makes them known to eslint etc.\n//    - Provides dummy types for WebGL2 when not available to streamline\n//      library code.\n//    - Exports types from headless gl when running under Node.js\n\n\nimport luma, { global } from '../../init';\n\nvar DummyType =\n/*#__PURE__*/\nfunction DummyType() {\n  _classCallCheck(this, DummyType);\n};\n\nvar _ref = luma.globals.headlessTypes || global,\n    _ref$WebGLRenderingCo = _ref.WebGLRenderingContext,\n    WebGLRenderingContext = _ref$WebGLRenderingCo === undefined ? DummyType : _ref$WebGLRenderingCo,\n    _ref$WebGLProgram = _ref.WebGLProgram,\n    WebGLProgram = _ref$WebGLProgram === undefined ? DummyType : _ref$WebGLProgram,\n    _ref$WebGLShader = _ref.WebGLShader,\n    WebGLShader = _ref$WebGLShader === undefined ? DummyType : _ref$WebGLShader,\n    _ref$WebGLBuffer = _ref.WebGLBuffer,\n    WebGLBuffer = _ref$WebGLBuffer === undefined ? DummyType : _ref$WebGLBuffer,\n    _ref$WebGLFramebuffer = _ref.WebGLFramebuffer,\n    WebGLFramebuffer = _ref$WebGLFramebuffer === undefined ? DummyType : _ref$WebGLFramebuffer,\n    _ref$WebGLRenderbuffe = _ref.WebGLRenderbuffer,\n    WebGLRenderbuffer = _ref$WebGLRenderbuffe === undefined ? DummyType : _ref$WebGLRenderbuffe,\n    _ref$WebGLTexture = _ref.WebGLTexture,\n    WebGLTexture = _ref$WebGLTexture === undefined ? DummyType : _ref$WebGLTexture,\n    _ref$WebGLUniformLoca = _ref.WebGLUniformLocation,\n    WebGLUniformLocation = _ref$WebGLUniformLoca === undefined ? DummyType : _ref$WebGLUniformLoca,\n    _ref$WebGLActiveInfo = _ref.WebGLActiveInfo,\n    WebGLActiveInfo = _ref$WebGLActiveInfo === undefined ? DummyType : _ref$WebGLActiveInfo,\n    _ref$WebGLShaderPreci = _ref.WebGLShaderPrecisionFormat,\n    WebGLShaderPrecisionFormat = _ref$WebGLShaderPreci === undefined ? DummyType : _ref$WebGLShaderPreci;\n\nexport var webGLTypesAvailable = WebGLRenderingContext !== DummyType && WebGLProgram !== DummyType && WebGLShader !== DummyType && WebGLBuffer !== DummyType && WebGLFramebuffer !== DummyType && WebGLRenderbuffer !== DummyType && WebGLTexture !== DummyType && WebGLUniformLocation !== DummyType && WebGLActiveInfo !== DummyType && WebGLShaderPrecisionFormat !== DummyType; // Ensures that WebGL2RenderingContext is defined in non-WebGL2 environments\n// so that apps can test their gl contexts with instanceof\n// E.g. if (gl instanceof WebGL2RenderingContext) { }\n\nfunction getWebGL2RenderingContext() {\n  var WebGL2RenderingContextNotSupported =\n  /*#__PURE__*/\n  function WebGL2RenderingContextNotSupported() {\n    _classCallCheck(this, WebGL2RenderingContextNotSupported);\n  };\n\n  return global.WebGL2RenderingContext || WebGL2RenderingContextNotSupported;\n} // Ensure that Image is defined under Node.js\n\n\nfunction getImage() {\n  var ImageNotSupported =\n  /*#__PURE__*/\n  function ImageNotSupported() {\n    _classCallCheck(this, ImageNotSupported);\n  };\n\n  return global.Image || ImageNotSupported;\n}\n\nvar WebGL2RenderingContext = getWebGL2RenderingContext();\nvar Image = getImage(); // Export the standard WebGL types\n\nexport { Image, WebGLRenderingContext, WebGLProgram, WebGLShader, WebGLBuffer, WebGLFramebuffer, WebGLRenderbuffer, WebGLTexture, WebGLUniformLocation, WebGLActiveInfo, WebGLShaderPrecisionFormat, WebGL2RenderingContext };","map":null,"metadata":{},"sourceType":"module"}